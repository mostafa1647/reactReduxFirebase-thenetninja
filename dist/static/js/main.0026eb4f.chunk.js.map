{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","tz","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","isFormSubmitted","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","add","authorId","Date","AuthIsLoaded","children","useSelector","isLoaded","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","error","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0026eb4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authAction\";\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to={'/create'}>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to={'/'} className={'btn btn-floating pink lighten-3'}>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => { dispatch(signOut()) }\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response) => {\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err});\r\n        });\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {NavLink, Link} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to={'/signup'}>Signup</NavLink></li>\r\n            <li><NavLink to={'/signin'}>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n};\r\n\r\n\r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to={'/'} className=\"brand-logo\">MarioPlan</Link>\r\n                { auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/> }\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <section className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notification</span>\r\n                    <ul className=\"notifications\">\r\n                        {   //rendering each notification to the dom :)\r\n                            notifications && notifications.map(item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <span className=\"pink-text\">{item.user} </span>\r\n                                        <span>{item.content}</span>\r\n                                        <div className=\"grey-text notification-date\">\r\n                                            { moment(item.time.toDate()).tz(\"Asia/Tehran\").fromNow() }\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\n\r\nexport default Notifications;","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).tz(\"Asia/Tehran\").calendar() }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProjectSummary;","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return(\r\n                        <Link to={'/project/' + project.id} key={project.id}>\r\n                            <ProjectSummary project={project}/>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default ProjectList;","import React,{ Component} from 'react';\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to={'/signin'} />;\r\n        return (\r\n            <div className=\"container dashboard\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: \"projects\", orderBy: ['createdAt', 'desc'] },\r\n        { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from \"react\";\r\nimport { compose} from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect} from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to={'/signin'} />;\r\n    if(project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action lighten-4 grey-text\">\r\n                        <div>Posted By  {project.authorFirstName + \" \" + project.authorLastName} </div>\r\n                        <div>{ moment(project.createdAt.toDate()).tz(\"Asia/Tehran\").calendar() }</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: \"projects\" }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: '',\r\n        isFormSubmitted: false\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n        this.setState({\r\n            ...this.state,\r\n            isFormSubmitted: true,\r\n            authError: null\r\n        })\r\n    };\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid) return <Redirect to={'/'} />;\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id={'email'} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" id={'password'} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    {\r\n                        this.state.isFormSubmitted && authError ?\r\n                            <div className=\"red-text center\">\r\n                                <p>{authError}</p>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => { dispatch(signIn(credentials)) }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authAction\";\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        isFormSubmitted: false,\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n        this.setState({\r\n            ...this.state,\r\n            isFormSubmitted: true,\r\n            authError: null\r\n        });\r\n    };\r\n    render() {\r\n        const {authError} = this.props;\r\n        if(this.props.auth.uid) return <Redirect to={'/'} />;\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name:</label>\r\n                        <input type=\"text\" id={'firstName'} onChange={this.handleChange} value={this.state.firstName}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name:</label>\r\n                        <input type=\"text\" id={'lastName'} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id={'email'} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" id={'password'} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                    </div>\r\n                    {\r\n                        // outputting signup error\r\n                        this.state.isFormSubmitted && authError ? <div className=\"red-text center\"><p>{ authError }</p></div> : null\r\n                    }\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => { dispatch(signUp(newUser)) }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content: ''\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.setState({\r\n            title: \"\",\r\n            content: \"\"\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        if(!this.props.auth.uid) return <Redirect to={'/signin'} />;\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title:</label>\r\n                        <input type=\"text\" id={'title'} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Ptoject Content:</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => {dispatch(createProject(project))}\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to database\r\n        const state = getState();\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: state.firebase.profile.firstName,\r\n            authorLastName: state.firebase.profile.lastName,\r\n            authorId: state.firebase.auth.uid,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type: \"CREATE_PROJECT\",\r\n                project\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: \"CREATE_PROJECT_ERROR\",\r\n                err\r\n            });\r\n        });\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport { isLoaded } from \"react-redux-firebase\";\nimport { useSelector } from 'react-redux';\n\n\nconst AuthIsLoaded = ({ children }) => {\n    const auth = useSelector(state => state.firebase.auth);\n    return isLoaded(auth) ? children : <div className=\"red-text center\">Loading...</div>;\n};\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <AuthIsLoaded>\n                <div className=\"App\">\n                    <Navbar />\n                    <Switch>\n                        <Route exact path={'/'} component={Dashboard} />\n                        <Route exact path={'/dashboard'} component={Dashboard} />\n                        <Route exact path={'/project/:id'} component={ProjectDetails} />\n                        <Route exact path={'/signin'} component={SignIn} />\n                        <Route exact path={'/signup'} component={SignUp} />\n                        <Route exact path={'/create'} component={CreateProject} />\n                    </Switch>\n                </div>\n            </AuthIsLoaded>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: \"login failed\"\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signed up');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('project created', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.error('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers} from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/analytics\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCpYKY7XkYFdVIWxoxaVfHSJk-5RAYHroQ\",\r\n    authDomain: \"react-redux-firebase-net-ninja.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firebase-net-ninja.firebaseio.com\",\r\n    projectId: \"react-redux-firebase-net-ninja\",\r\n    storageBucket: \"react-redux-firebase-net-ninja.appspot.com\",\r\n    messagingSenderId: \"602520851890\",\r\n    appId: \"1:602520851890:web:897731aa968f99066040ab\",\r\n    measurementId: \"G-47RHCRD9SE\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nfirebase.firestore();\r\n\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from 'react-redux';\nimport thunk from \"redux-thunk\";\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from \"redux-firestore\";\nimport {ReactReduxFirebaseProvider, getFirebase, reactReduxFirebase} from \"react-redux-firebase\";\nimport fbConfig from './config/fbConfig';\nimport firebase from \"firebase\";\n\n\n\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig)\n    )\n);\n\nconst rrfConfig = {\n    useFirestoreForProfile: true,\n    userProfile: 'users'\n};\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}